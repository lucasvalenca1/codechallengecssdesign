---

# Login Form Styling

This document outlines the styling applied to a simple login form using HTML and CSS. The form includes fields for entering a name and email, along with a sign-in button. The styling aims to create a clean, modern look suitable for a variety of web applications.

## HTML Structure

The HTML structure consists of a basic `<!DOCTYPE html>` declaration followed by `<html>`, `<head>`, and `<body>` tags. Inside the `<body>`, there's a `<form>` element containing two `<input>` elements for the name and email, and a `<button>` for submitting the form.

```html
<!DOCTYPE html>
<html>
  <head>
    <title>Log In Page</title>
    <link rel="stylesheet" type="text/css" href="style.css" />
  </head>

  <body>
    <form>
      <input type="text" placeholder="Enter your name" required />
      <input type="text" placeholder="Enter your email" required />
      <button>Sign In</button>
    </form>
  </body>
</html>
```

## CSS Styling

The CSS styles are designed to enhance the visual appeal and usability of the form. Here's a breakdown of the key styles:

### Input Fields

Each input field is styled to have a font weight of 300, ensuring it's not too heavy but still legible. The fields take up 100% of the available width, making them responsive. A font size of 25px is used for readability, and the border is removed for a cleaner look. The color scheme uses a dark gray (`#4b545f`) for the text, complemented by a sans-serif font family (`Helvetica Neue, Helvetica, Sans-serif`).

```css
input {
  font-weight: 300;
  width: 100%;
  font-size: 25px;
  border: 0px;
  color: #4b545f;
  font-family: Helvetica Neue, Helvetica, Sans-serif;
  margin: 5%;
}
```

### Sign-In Button

The sign-in button features a 2px solid border in a light gray (`#ddd`) color, providing a subtle contrast against the background. Padding is set to 3%, ensuring the button text is not cramped, and margins ensure spacing around the button. The button width is set to 50% of its parent container, making it prominent within the form.

```css
button {
  border: 2px solid #ddd;
  padding: 3%;
  margin: 5%;
  width: 50%;
}
```

### Form Container

The form itself is centered both vertically and horizontally within its parent container, thanks to `text-align: center;`. It's also made responsive by setting its width to 90% of its parent, ensuring it looks good on various screen sizes. Margins are adjusted to center the form within the page.

```css
form {
  text-align: center;
  width: 90%;
  margin: 0 auto;
}
```

## Conclusion

This styling approach creates a visually appealing and functional login form that should integrate well into many web designs. Adjustments can be made as needed to fit specific branding or design requirements.